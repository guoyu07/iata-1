package main

import (
	"encoding/csv"
	"fmt"
	"io"
	"log"
	"os"
	"sort"
)

func main() {
	in, err := os.Open(os.Args[1])
	if err != nil {
		log.Fatal(err)
	}
	defer in.Close()

	out, err := os.Create(os.Args[2])
	if err != nil {
		log.Fatal(err)
	}
	defer out.Close()

	r := csv.NewReader(in)

	var entries [][]string

	for {
		rec, err := r.Read()
		if err == io.EOF {
			break
		}

		if err != nil {
			log.Fatal(err)
		}

		iata, name, city, country := rec[10], rec[2], rec[8], rec[6]

		// Skip the header line and skip airports with no (or
		// garbage) IATA codes
		if iata == "iata_code" || iata == "" || iata == "0" || iata[0] == '-' {
			continue
		}

		entries = append(entries, []string{iata, name, city, country})
	}

	sort.Slice(entries, func(i, j int) bool {
		return entries[i][0] < entries[j][0]
	})

	fmt.Fprint(out, header)
	for _, entry := range entries {
		fmt.Fprintf(
			out,
			"{ iata: `%s`, name: `%s`, city: `%s`, country: `%s`},\n",
			entry[0],
			entry[1],
			entry[2],
			entry[3],
		)
	}
	fmt.Fprint(out, footer)

	if out.Close(); err != nil {
		log.Fatal(err)
	}

}

const header = `// Generated by tools/get-codes.go
package main

var airports = []struct {
iata, name, city, country string
}{
`

const footer = `}`
